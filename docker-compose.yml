version: "3.9"


networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"

services:
  mysql:
    image: mysql
    container_name: athena-mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - "13306:3306"  
    # 系统环境变量
    environment:
      MYSQL_DATABASE: 'rule-server' # 初始化启动时要创建的数据库的名称
      MYSQL_ROOT_PASSWORD: '123456' # root管理员用户密码
      MYSQL_PASSWORD: "123456"
    # 健康检查
    healthcheck:
        test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p123456' ]
        timeout: 20s
        retries: 10
    # 映射数据卷到数据库
    volumes:
      - rule-data-mysql:/var/lib/mysql
      - ./rule-server/sql:/docker-entrypoint-initdb.d/ # 数据库文件初始化
    networks:
      - backend

  rule-server:
    build:
      context: ./rule-server
      dockerfile: ./Dockerfile
    container_name: rule-server
    restart: always
    ports:
      - "1016:1016"
    # 确保mysql准备就绪
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - frontend
      - backend

  mongodb:
    image: mongo
    container_name: athena-mongodb
    restart: always
    ports:
      - "27018:27017"
    depends_on:
      - rule-server
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/productiondb --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    volumes: 
      - report-data-mongo:/data
    networks:
      - backend

  athena-server:
    build:
      context: ./athena-server
      dockerfile: ./Dockerfile
    container_name: athena-server
    restart: always
    ports:
      - "8888:8888"
    # 确保mysql准备就绪
    depends_on:
      mysql:
        condition: service_healthy
      rule-server: 
        condition: service_started
      mongodb:
        condition: service_started
    networks:
      - frontend
      - backend
    
volumes:
  rule-data-mysql:
  report-data-mongo: